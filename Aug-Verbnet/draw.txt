NP V NP (Basic Transitive; with accompanied motion)
  Syntax: NP[Agent] VERB NP[Theme]
  Semantics:
    * motion(during(E0), Theme)
    * equals(E0, E1)
    * motion(during(E1), Agent)
    * cause(Agent, E0)
NP V NP PP.destination (NP-PP; Goal-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[to towards] NP[Destination]
  Semantics:
    * motion(during(E0), Theme)
    * location(end(E0), Theme, Destination)
    * equals(E0, E1)
    * motion(during(E1), Agent)
    * location(end(E1), Agent, Destination)
    * cause(Agent, E0)
NP V NP PP.initial_location (NP-PP; Initial_Location-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+src] NP[Initial_Location]
  Semantics:
    * motion(during(E0), Theme)
    * location(start(E0), Theme, Initial_Location)
    * equals(E0, E1)
    * motion(during(E1), Agent)
    * location(start(E1), Agent, Initial_Location)
    * cause(Agent, E0)
NP V NP PP.initial_location PP.destination (NP-PP-PP; Initial_Location-PP Goal-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+src] NP[Initial_Location] PREP[to towards] NP[Destination]
  Semantics:
    * motion(during(E0), Theme)
    * location(start(E0), Theme, Initial_Location)
    * location(end(E0), Theme, Destination)
    * equals(E0, E1)
    * motion(during(E1), Agent)
    * location(start(E1), Agent, Initial_Location)
    * location(end(E1), Agent, Destination)
    * cause(Agent, E0)
NP V NP PP.destination PP.initial_location (NP-PP-PP; Goal-PP Initial_Location-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[to towards] NP[Destination] PREP[+src] NP[Initial_Location]
  Semantics:
    * motion(during(E0), Theme)
    * location(start(E0), Theme, Initial_Location)
    * location(end(E0), Theme, Destination)
    * equals(E0, E1)
    * motion(during(E1), Agent)
    * location(start(E1), Agent, Initial_Location)
    * location(end(E1), Agent, Destination)
    * cause(Agent, E0)
NP V NP (Basic Transitive)
  Syntax: NP[Agent] VERB NP[Patient]
  Semantics:
    * force(during(E), Agent, Patient, ?Result)
NP V NP S_ING (NP-P-ING-OC; into-PP)
  Syntax: NP[Agent] VERB NP[Patient] PREP[into] NP[Result +oc_ing]
  Semantics:
    * force(during(E), Agent, Patient, Result)
NP V NP PP.result (NP-PP; into-PP)
  Syntax: NP[Agent] VERB NP[Patient] PREP[into] NP[Result -sentential]
  Semantics:
    * force(during(E), Agent, Patient, Result)
NP V NP S_INF (NP-TO-INF-OC)
  Syntax: NP[Agent] VERB NP[Patient] NP[Result +oc_to_inf]
  Semantics:
    * force(during(E), Agent, Patient, Result)
NP V NP.beneficiary NP (NP-NP; Beneficiary Object)
  Syntax: NP[Agent] VERB NP[Beneficiary] NP[Theme]
  Semantics:
    * exist(start(E), Theme)
    * exist(result(E), Theme)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP V NP (Basic Transitive)
  Syntax: NP[Agent] VERB NP[Theme]
  Semantics:
    * cause(Agent, E)
    * location(start(E), Theme, ?Source)
    * location(end(E), Theme, ?Source)
NP V NP PP.source (NP-PP; Source-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+src] NP[Source]
  Semantics:
    * cause(Agent, E)
    * location(start(E), Theme, Source)
    * location(end(E), Theme, Source)
NP V NP (Basic Transitive)
  Syntax: NP[Agent] VERB NP[Theme]
  Semantics:
    * created_image(result(E), Theme)
    * location(end(E), Theme, ?Destination)
    * cause(Agent, E)
NP V NP PP.destination (NP-PP; locative-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+loc +dest_conf] NP[Destination]
  Semantics:
    * created_image(result(E), Theme)
    * Prep(end(E), Theme, Destination)
    * cause(Agent, E)
NP V (Unspecified Object)
  Syntax: NP[Agent] VERB
  Semantics:
    * created_image(result(E), ?Theme)
    * location(end(E), ?Theme, ?Destination)
    * cause(Agent, E)
NP V NP PP.co-patient (NP-PP; Source-PP)
  Syntax: NP[Agent] VERB NP[Patient] PREP[off off of from] NP[Co-Patient]
  Semantics:
    * cause(Agent, E)
    * together(start(E), physical, Patient, Co-Patient)
    * apart(result(E), physical, Patient, Co-Patient)
NP V NP apart (Apart Reciprocal Alternation Transitive)
  Syntax: NP[Agent] VERB NP[Patient +plural] LEX[apart]
  Semantics:
    * cause(Agent, E)
    * together(start(E), physical, Patient_i, Patient_j)
    * apart(result(E), physical, Patient_i, Patient_j)
NP V PP.co-patient (PP; Source-PP)
  Syntax: NP[Patient] VERB PREP[off off of from] NP[Co-Patient]
  Semantics:
    * together(start(E), physical, Patient, Co-Patient)
    * apart(result(E), physical, Patient, Co-Patient)
NP V apart (Apart Reciprocal Alternation Intransitive)
  Syntax: NP[Patient +plural] VERB LEX[apart]
  Semantics:
    * together(start(E), physical, Patient_i, Patient_j)
    * apart(result(E), physical, Patient_i, Patient_j)
NP V PP ADV-Middle (Middle Construction)
  Syntax: NP[Patient] VERB PREP[off off of from] NP[Co-Patient] ADV
  Semantics:
    * together(start(E), physical, Patient, Co-Patient)
    * apart(result(E), physical, Patient, Co-Patient)
NP V ADV-Middle (Middle Construction)
  Syntax: NP[Patient +plural] VERB LEX[apart] ADV
  Semantics:
    * together(start(E), physical, Patient_i, Patient_j)
    * apart(result(E), physical, Patient_i, Patient_j)
