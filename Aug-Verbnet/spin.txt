NP V NP (Basic Transitive)
  Syntax: NP[Agent] VERB NP[Product]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, ?Material)
    * cause(Agent, E)
NP V (Unspecified Object)
  Syntax: NP[Agent] VERB
  Semantics:
    * exist(start(E), ?Product)
    * exist(result(E), ?Product)
    * made_of(result(E), ?Product, ?Material)
    * cause(Agent, E)
NP V NP.product PP.material (Material/Product Alternation Transitive; Product Object)
  Syntax: NP[Agent] VERB NP[Product] PREP[from out_of] NP[Material]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
NP V NP.material PP.product (Material/Product Alternation Transitive; Material Object)
  Syntax: NP[Agent] VERB NP[Material] PREP[into] NP[Product]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
NP V NP PP.beneficiary (NP-PP; for-PP)
  Syntax: NP[Agent] VERB NP[Product] PREP[for] NP[Beneficiary]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, ?Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP V NP.beneficiary NP PP (NP-NP; Object Beneficiary)
  Syntax: NP[Agent] VERB NP[Beneficiary] NP[Product] PREP[from out_of] NP[Material]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP V NP PP.material PP.beneficiary (NP-PP-PP; Source-PP Beneficiary-PP)
  Syntax: NP[Agent] VERB NP[Product] PREP[from out_of] NP[Material] PREP[for] NP[Beneficiary]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP V NP PP.beneficiary (NP-PP; for-PP)
  Syntax: NP[Agent] VERB NP[Material] PREP[for] NP[Beneficiary]
  Semantics:
    * exist(start(E), ?Product)
    * exist(result(E), ?Product)
    * made_of(result(E), ?Product, Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP V NP PP.product PP.beneficiary (NP-PP-PP; Product-PP Beneficiary-PP)
  Syntax: NP[Agent] VERB NP[Material] PREP[into] NP[Product] PREP[for] NP[Beneficiary]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP.material V NP (Raw Material Subject)
  Syntax: NP[Material] VERB NP[Product]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(?Agent, E)
NP V NP NP PP.asset (NP-NP-PP; Asset-PP)
  Syntax: NP[Agent] VERB NP[Beneficiary] NP[Product] PREP[for] NP[Asset]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, ?Material)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
    * cost(E, Asset)
NP V NP PP.material PP.asset (NP-PP-PP; Material-PP, Asset-PP)
  Syntax: NP[Agent] VERB NP[Product] PREP[from out_of] NP[Material] PREP[for] NP[Asset]
  Semantics:
    * exist(start(E), Product)
    * exist(result(E), Product)
    * made_of(result(E), Product, Material)
    * cause(Agent, E)
    * cost(E, Asset)
NP V NP PP.location (NP-PP; path-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+path] NP[Location]
  Semantics:
    * rotational_motion(during(E), Theme)
    * Prep(start(E), Theme, Location)
    * Prep(E, Theme, Location)
    * cause(Agent, E)
NP V PP.location (PP; path-PP)
  Syntax: NP[Theme] VERB PREP[+path] NP[Location]
  Semantics:
    * rotational_motion(during(E), Theme)
    * Prep(start(E), Theme, Location)
    * Prep(E, Theme, Location)
NP V ADV-Middle PP.location (Middle Construction)
  Syntax: NP[Theme] VERB ADV PREP[+path] NP[Location]
  Semantics:
    * rotational_motion(during(E), Theme)
    * Prep(start(E), Theme, Location)
    * Prep(E, Theme, Location)
NP V NP.beneficiary NP (NP-NP; Beneficiary Object)
  Syntax: NP[Agent] VERB NP[Beneficiary] NP[Theme]
  Semantics:
    * exist(start(E), Theme)
    * exist(result(E), Theme)
    * cause(Agent, E)
    * benefit(E, Beneficiary)
NP.theme V (Basic Intransitive; inchoative)
  Syntax: NP[Theme] VERB
  Semantics:
    * motion(during(E), Theme)
NP V PP.location (PP; locative-PP)
  Syntax: NP[Theme] VERB PREP[+spatial] NP[Location]
  Semantics:
    * motion(during(E), Theme)
    * Prep(E, Theme, Location)
NP V NP.theme (Transitive; Causative)
  Syntax: NP[Agent] VERB NP[Theme]
  Semantics:
    * motion(during(E), Theme)
    * cause(Agent, E)
NP V NP PP.location (NP-PP; path-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[+path] NP[Location]
  Semantics:
    * motion(during(E), Theme)
    * Prep(E, Theme, Location)
    * cause(Agent, E)
NP V ADJ (ADJP; Resultative)
  Syntax: NP[Theme] VERB NP[Result]
  Semantics:
    * motion(during(E), Theme)
    * Pred(result(E), Theme)
NP V PP.result (PP; Result-PP)
  Syntax: NP[Theme] VERB PREP[to into] NP[Result +state]
  Semantics:
    * motion(during(E), Theme)
    * Pred(result(E), Theme)
NP V NP ADJ (NP-ADJP; Resultative)
  Syntax: NP[Agent] VERB NP[Theme] NP[Result]
  Semantics:
    * motion(during(E), Theme)
    * cause(Agent, E)
    * Pred(result(E), Theme)
NP V NP PP.result (NP-PP; Result-PP)
  Syntax: NP[Agent] VERB NP[Theme] PREP[to into] NP[Result +state]
  Semantics:
    * motion(during(E), Theme)
    * cause(Agent, E)
    * Pred(result(E), Theme)
NP V (Basic Intransitive)
  Syntax: NP[Patient] VERB
  Semantics:
    * discomfort(during(E), Patient)
    * experience(E, ?Experiencer)
NP V PP.stimulus (PP; Stimulus-PP)
  Syntax: NP[Patient] VERB PREP[from at] NP[Stimulus]
  Semantics:
    * discomfort(during(E), Patient)
    * experience(E, ?Experiencer)
    * in_reaction_to(E, Stimulus)
